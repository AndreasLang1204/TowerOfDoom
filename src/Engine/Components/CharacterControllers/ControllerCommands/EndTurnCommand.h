#pragma once

#include "ACharacterControllerCommand.h"

namespace ToD
{
	namespace Components
	{
		namespace CharacterControllers
		{
			namespace ControllerCommands
			{
				////////////////////////////////////////////////////////////
				/// \brief Ends the turn of the currently active character.
				///
				////////////////////////////////////////////////////////////
				class EndTurnCommand :
					public ACharacterControllerCommand
				{
					/// Constructors, destructors
				public:
					////////////////////////////////////////////////////////////
					/// \brief The constructor.
					///
					/// \param l_owner The command owner.
					///
					////////////////////////////////////////////////////////////
					explicit EndTurnCommand(ACharacterControllerInstance* l_owner);

					////////////////////////////////////////////////////////////
					/// \brief The destructor.
					///
					////////////////////////////////////////////////////////////
					~EndTurnCommand() IsDefault__;

					/// Properties
				public:
					////////////////////////////////////////////////////////////
					/// \brief Gets the static runtime type.
					///
					/// \return The static runtime type.
					///
					////////////////////////////////////////////////////////////
					virtual RuntimeType GetRuntimeType() const override;

					////////////////////////////////////////////////////////////
					/// \brief Gets the static runtime type.
					///
					/// \return The static runtime type.
					///
					////////////////////////////////////////////////////////////
					static RuntimeType RuntimeType();

					/// Methods
				public:
					////////////////////////////////////////////////////////////
					/// \brief Executes the command.
					///
					////////////////////////////////////////////////////////////
					virtual void Execute() override;
				};
			}
		}
	}
}
