#pragma once

#include "ReferenceType.h"

using namespace sf;

namespace ToD
{
	////////////////////////////////////////////////////////////
	/// \brief Defines supported keyboard keys.
	///
	////////////////////////////////////////////////////////////
	class KeyboardKey :
		public ReferenceType
	{
		/// Constructors, destructors
	private:
		////////////////////////////////////////////////////////////
		/// \brief The constructor (default constructor).
		///
		////////////////////////////////////////////////////////////
		KeyboardKey() IsDefault__;

		////////////////////////////////////////////////////////////
		/// \brief The destructor.
		///
		////////////////////////////////////////////////////////////
		~KeyboardKey() IsDefault__;

		/// Properties
	public:
		////////////////////////////////////////////////////////////
		/// \brief Gets the static runtime type.
		///
		/// \return The static runtime type.
		///
		////////////////////////////////////////////////////////////
		static string RuntimeType();

		/// Methods
	public:
		////////////////////////////////////////////////////////////
		/// \brief Parses a string to an entry of the enumeration.
		///
		/// \param l_value The string to parse.
		///
		/// \exception std::exception: l_key references an invalid enumeration entry.
		///
		////////////////////////////////////////////////////////////
		static Keyboard::Key FromString(const string l_value);
	};
}
