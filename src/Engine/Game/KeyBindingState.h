#pragma once

#include "Enumeration.h"

namespace ToD
{
	////////////////////////////////////////////////////////////
	/// \brief Defines the possible states of a key binding.
	///
	////////////////////////////////////////////////////////////
	class KeyBindingState :
		public Enumeration<KeyBindingState>
	{
		/// Enumeation values
	public:
		////////////////////////////////////////////////////////////
		/// \brief The key for the binding was pressed this frame.
		///
		////////////////////////////////////////////////////////////
		EnumerationDeclaration__(IsPressed, 0)

		////////////////////////////////////////////////////////////
		/// \brief The key for the binding was pressed.
		///
		////////////////////////////////////////////////////////////
		EnumerationDeclaration__(WasPressed, 1)

		////////////////////////////////////////////////////////////
		/// \brief The key for the binding was released this frame.
		///
		////////////////////////////////////////////////////////////
		EnumerationDeclaration__(IsReleased, 2)

		////////////////////////////////////////////////////////////
		/// \brief The key for the binding was released.
		///
		////////////////////////////////////////////////////////////
		EnumerationDeclaration__(WasReleased, 3)

		/// Constructors, destructors
	private:
		////////////////////////////////////////////////////////////
		/// \brief The constructor (default constructor).
		///
		////////////////////////////////////////////////////////////
		KeyBindingState() IsDefault__;

		////////////////////////////////////////////////////////////
		/// \brief The destructor.
		///
		////////////////////////////////////////////////////////////
		~KeyBindingState() IsDefault__;

		/// Properties
	public:
		////////////////////////////////////////////////////////////
		/// \brief Gets the static runtime type.
		///
		/// \return The static runtime type.
		///
		////////////////////////////////////////////////////////////
		static string RuntimeType();
	};
}
